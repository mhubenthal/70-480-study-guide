[{"sectionTitle":"Implement and manipulate document structures and objects","sectionPercent":"24","topics":[{"topicTitle":"Create the document structure","topicContent":"Structure the UI by using semantic markup, including for search engines and screen readers (Section, Article, Nav, Header, Footer, and Aside); create a layout container in HTML"},{"topicTitle":"Write code that interacts with UI controls","topicContent":"Programmatically add and modify HTML elements; implement media controls; implement HTML5 canvas and SVG graphics"},{"topicTitle":"Apply styling to HTML elements programmatically","topicContent":"Change the location of an element; apply a transform; show and hide elements"},{"topicTitle":"Implement HTML5 APIs","topicContent":"Implement storage APIs, AppCache API, and Geolocation API"},{"topicTitle":"Establish the scope of objects and variables","topicContent":"Define the lifetime of variables; keep objects out of the global namespace; use the “this” keyword to reference an object that fired an event; scope variables locally and globally"},{"topicTitle":"Create and implement objects and methods","topicContent":"Implement native objects; create custom objects and custom properties for native objects using prototypes and functions; inherit from an object; implement native methods and create custom methods"}]},
{"sectionTitle":"Implement program flow","sectionPercent":"25","topics":[{"topicTitle":"Implement program flow","topicContent":"Iterate across collections and array items; manage program decisions by using switch statements, if/then, and operators; evaluate expressions"},{"topicTitle":"Raise and handle an event","topicContent":"Handle common events exposed by DOM (OnBlur, OnFocus, OnClick); declare and handle bubbled events; handle an event by using an anonymous function"},{"topicTitle":"Implement exception handling","topicContent":"Set and respond to error codes; throw an exception; request for null checks; implement try-catch-finally blocks"},{"topicTitle":"Implement a callback","topicContent":"Receive messages from the HTML5 WebSocket API; use jQuery to make an AJAX call; wire up an event; implement a callback by using anonymous functions; handle the “this” pointer"},{"topicTitle":"Create a web worker process","topicContent":"Start and stop a web worker; pass data to a web worker; configure timeouts and intervals on the web worker; register an event listener for the web worker; limitations of a web worker"}]},
{"sectionTitle":"Access and secure data","sectionPercent":"26","topics":[{"topicTitle":"Validate user input by using HTML5 elements","topicContent":"Choose the appropriate controls based on requirements; implement HTML input types and content attributes (for example, required) to collect user input"},{"topicTitle":"Validate user input by using JavaScript","topicContent":"Evaluate a regular expression to validate the input format; validate that you are getting the right kind of data type by using built-in functions; prevent code injection"},{"topicTitle":"Consume data","topicContent":"Consume JSON and XML data; retrieve data by using web services; load data or get data from other sources by using XMLHTTPRequest"},{"topicTitle":"Serialize, deserialize, and transmit data","topicContent":"Binary data; text data (JSON, XML); implement the jQuery serialize method; Form.Submit; parse data; send data by using XMLHTTPRequest; sanitize input by using URI/form encoding"}]},
{"sectionTitle":"Use CSS3 in applications","sectionPercent":"25","topics":[{"topicTitle":"Style HTML text properties","topicContent":"Apply styles to text appearance (color, bold, italics); apply styles to text font (WOFF and @font-face, size); apply styles to text alignment, spacing, and indentation; apply styles to text hyphenation; apply styles for a text drop shadow"},{"topicTitle":"Style HTML box properties","topicContent":"Apply styles to alter appearance attributes (size, border and rounding border corners, outline, padding, margin); apply styles to alter graphic effects (transparency, opacity, background image, gradients, shadow, clipping); apply styles to establish and change an element’s position (static, relative, absolute, fixed)"},{"topicTitle":"Create a flexible content layout","topicContent":"Implement a layout using a flexible box model; implement a layout using multi-column; implement a layout using position floating and exclusions; implement a layout using grid alignment; implement a layout using regions, grouping, and nesting"},{"topicTitle":"Create an animated and adaptive UI","topicContent":"Animate objects by applying CSS transitions; apply 3-D and 2-D transformations; adjust UI based on media queries (device adaptations for output formats, displays, and representations); hide or disable controls"},{"topicTitle":"Find elements by using CSS selectors and jQuery","topicContent":"Choose the correct selector to reference an element; define element, style, and attribute selectors; find elements by using pseudo-elements and pseudo-classes (for example, :before, :first-line, :first-letter, :target, :lang, :checked, :first-child)"},{"topicTitle":"Structure a CSS file by using CSS selectors","topicContent":"Reference elements correctly; implement inheritance; override inheritance by using !important; style an element based on pseudo-elements and pseudo-classes (for example, :before, :first-line, :first-letter, :target, :lang, :checked, :first-child)"}]}]
